[|"/displayrules"|]
RulesRedundantNewKeyword  = Usage of `new` keyword here is redundant.
RulesTypographyOverridenIndentationError  = Invalid indentation.
RulesFormattingTupleParenthesesError  = Use parentheses for tuple instantiation.
RulesRaiseWithSingleArgument  = `raise` should have a single argument, further arguments will be ignored by the compiler.
RulesConventionsRecursiveAsyncFunctionError  = Recursive async functions ending with a `do!` recursive call will leak memory; prefer `return!`.
RulesTypographyIndentationError  = Indentation must use a multiple of {0} spaces.
RulesNumberOfItemsClassMembersError  = Class suggested to have a maximum of {0} members.
RulesTypographyTrailingLineError  = Found trailing whitespace line at end of file.
RulesNamingConventionsCamelCaseError  = Consider changing `{0}` to camelCase.
RulesNumberOfItemsBooleanConditionsError  = Conditions suggested to contain at most {0} boolean operators.
RulesNestedStatementsError  = Code suggested not to be nested more deeply than a depth of {0}.
RulesTypographyTabCharacterError  = Consider replacing tab (`\t`) with spaces.
RulesHintRefactor  = `{0}` might be able to be refactored into `{1}`.
RulesFormattingF#PostfixGenericError  = Use postfix syntax for F# type {0}.
RulesFormattingPatternMatchOrClausesOnNewLineError  = Each 'or' match clause should be placed on its own line
RulesCanBeReplacedWithComposition  = Lambda may be able to be replaced with composition. e.g. `fun x -> x |> isValid |> not` could be replaced with `isValid >> not`.
RulesFormattingTypedItemSpacingError  = Expected {0} space(s) before and {1} space(s) after ':' in typed item.
RulesReimplementsFunction  = If `{0}` has no mutable arguments partially applied then the lambda can be removed.
RulesFormattingF#ArrayPostfixError  = Use special postfix syntax for F# type array.
RulesNumberOfItemsTupleError  = Tuple suggested to have a maximum of {0} items.
RulesNamingConventionsPrefixError  = Consider changing `{0}` to be prefixed with `{1}`.
RulesFormattingPatternMatchClauseIndentationError  = Match clauses should be in line with 'match' keyword.
RulesFailwithWithSingleArgument  = `failwith` should have a single argument, further arguments will be ignored by the compiler.
RulesNamingConventionsUnderscoreError  = Consider changing `{0}` to remove any underscores.
RulesFormattingClassMemberSpacingError  = Class members should be separated by 1 blank line.
RulesNullArgWithSingleArgument  = `nullArg` should have a single argument, further arguments will be ignored by the compiler.
LintSourceError  = Error on line {0} starting at column {1}
RulesInvalidOpWithSingleArgument  = `invalidOp` should have a single argument, further arguments will be ignored by the compiler.
RulesFormattingModuleDeclSpacingError  = Separate module declarations with 2 blank lines.
RulesFormattingLambdaPatternMatchClauseIndentationError  = Match clauses should be indented one level from 'function' keyword.
RulesFormattingTupleIndentationError  = Sub-expressions of tuple on different lines should have consistent indentation.
RulesTypographyFileLengthError  = File suggested to be less than {0} lines long.
RulesUselessBindingError  = Binding appears to have no purpose.
RulesTypographyRecordFieldIndentationError  = Record fields should be aligned.
RulesFavourIgnoreOverLetWildError  = The `ignore` function is usually favoured over `let _ = ...` when ignoring the result of an expression.
RulesFormattingTupleCommaSpacingError  = Comma in tuple instantiation should be followed by single space.
RulesInvalidArgWithTwoArguments  = `invalidArg` should have two arguments, further arguments will be ignored by the compiler.
RulesTypographyLineLengthError  = Line suggested to be less than {0} characters long.
RulesNumberOfItemsFunctionError  = Functions suggested to have a maximum of {0} parameters.
RulesFormattingPatternMatchClausesOnNewLineError  = Each match clause should be placed on its own line.
RulesNamingConventionsPascalCaseError  = Consider changing `{0}` to PascalCase.
RulesFormattingMatchExpressionIndentationError  = If RHS of pattern match case is on newline, it should be indentend by one level.
RulesTupleOfWildcardsError  = A tuple of wildcards in a pattern can be replaced with a single wildcard. `{0}` can be replaced with `{1}`.
RulesFormattingPatternMatchClauseSameIndentationError  = Match clauses should be at the same indentation level.
RulesWildcardNamedWithAsPattern  = Unnecessary wildcard named using the as pattern, the wildcard can be removed e.g. `_ as x` replaced with `x`.
RulesConventionsTopLevelNamespaceError  = Prefer namespaces at top level.
RulesFormattingUnionDefinitionSameIndentationError  = Union definition cases should be at the same indentation level.
RulesNamingConventionsSuffixError  = Consider changing `{0}` to be suffixed with `{1}`.
RulesTypographyTrailingWhitespaceError  = Found trailing whitespace at end of line.
LintError  = Error in file {0} on line {1} starting at column {2}
RulesFormattingGenericPrefixError  = Use prefix syntax for generic type.
RulesSourceLengthError  = {0} was {2} lines long, suggested to be less than {1} lines long.
RulesHintSuggestion  = `{0}`; suggestion: {1}.
RulesFailwithfWithArgumentsMatchingFormatString  = `failwithf` has more arguments than were found in its format string, these further arguments will be ignored by the compiler.
RulesFormattingUnionDefinitionIndentationError  = Union definition cases should be indented one level on a new line.

 Total Rules: 55
